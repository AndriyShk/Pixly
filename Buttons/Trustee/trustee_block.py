import logging, config
from datetime import datetime
from aiogram import Bot, Router
from aiogram.types import CallbackQuery, InlineKeyboardMarkup, InlineKeyboardButton, FSInputFile
from db import get_user, user_in_ban_list

bot = Bot(token=config.API_TOKEN)
router = Router()

@router.callback_query(lambda c: c.data == 'trustee')
async def trustee(call: CallbackQuery):
    log_message = f"Trustee - {datetime.now().strftime('%Y-%m-%d %H:%M:%S')}"
    logging.info(log_message)
    await bot.send_message(chat_id=config.LOGS, text=log_message)
    
    user = get_user(call.from_user.id)
    user_ban = user_in_ban_list(call.from_user.id)

    if user:
        if not user_ban:
            video = FSInputFile(path='E:/–ü—Ä–æ–≥—Ä–∞–º—É–≤–∞–Ω–Ω—è/Telegram/MonoE/Buttons/Trustee/video/Trustee.MP4', filename='trustee.mp4')
            caption = '<b>‚ö°Ô∏è –ù–∞—Ä–µ—à—Ç—ñ. –£–∫—Ä–∞—ó–Ω—Ü—è–º –¥–æ–∑–≤–æ–ª–∏–ª–∏ —Ä–æ–∑—Ä–∞—Ö–æ–≤—É–≤–∞—Ç–∏—Å—å –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç–æ—é —á–µ—Ä–µ–∑ Google Pay/Apple Pay</b>\n\n–ú–æ–∂–ª–∏–≤–æ—Å—Ç—ñ –∫–∞—Ä—Ç–∏ –≤—ñ–¥ Trustee:\n\n‚ñ™Ô∏è–ö—É–ø—ñ–≤–ª—è –∫—Ä–∏–ø—Ç–∏ —ñ –≤–∏–≤–µ–¥–µ–Ω–Ω—è –æ–¥—Ä–∞–∑—É –Ω–∞ –∑–≤–∏—á–∞–π–Ω—É –∫–∞—Ä—Ç—É.\n‚ñ™Ô∏è–ó–Ω—è—Ç—Ç—è –∫—Ä–∏–ø—Ç–∏ –≤ –±–∞–Ω–∫–æ–º–∞—Ç—ñ.\n‚ñ™Ô∏è5000‚Ç¨ –¥–µ–Ω–Ω–∏–π –ª—ñ–º—ñ—Ç (–≤–∫–ª—é—á–∞—é—á–∏ –≤–∏—Ç—Ä–∞—Ç–∏ –∑–∞ –∫–æ—Ä–¥–æ–Ω–æ–º).\n‚ñ™Ô∏è–í–µ—Ä–∏—Ñ—ñ–∫–∞—Ü—ñ—è —á–µ—Ä–µ–∑ ¬´–î—ñ—é¬ª.\n‚ñ™Ô∏è–í—ñ–¥—Å—É—Ç–Ω—ñ—Å—Ç—å —Ñ—ñ–Ω–º–æ–Ω—ñ—Ç–æ—Ä–∏–Ω–≥—É.\n\n‚ñ™Ô∏è–ö–∞—Ä—Ç–æ—é —á–µ—Ä–µ–∑ Google Pay/Apple Pay –º–æ–∂–ª–∏–≤–æ —Ä–æ–∑—Ä–∞—Ö–æ–≤—É–≤–∞—Ç–∏—Å—è —è–∫ –≤ –£–∫—Ä–∞—ó–Ω—ñ, —Ç–∞–∫ —ñ –∑–∞ –∫–æ—Ä–¥–æ–Ω–æ–º. \n\n<i>–ü–æ—Å–∏–ª–∞–Ω–Ω—è –Ω–∞ –¥–æ–¥–∞—Ç–æ–∫: https://trusteeglobal.com/?refferals=8jBMqvCfUBbx</i>\n\n<b>–ö–æ—Ä–∏—Å—Ç—É–π—Ç–µ—Å—å, —Ü–µ —à–≤–∏–¥–∫–æ, –±–µ–∑–ø–µ—á–Ω–æ —Ç–∞ –∑—Ä—É—á–Ω–æ üòâ</b>'
        
            markup = InlineKeyboardMarkup(inline_keyboard=[[InlineKeyboardButton(text='‚¨áÔ∏è –ó–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏ –¥–æ–¥–∞—Ç–æ–∫', url='https://trusteeglobal.com/?refferals=8jBMqvCfUBb')],[InlineKeyboardButton(text='‚Ü©Ô∏è –ú–µ–Ω—é', callback_data='menu_trustee')]])
            
            await bot.delete_message(chat_id=call.message.chat.id, message_id=call.message.message_id)
            await bot.send_video(chat_id=call.message.chat.id, video=video, caption=caption, parse_mode='html', reply_markup=markup)
        else:
            await call.answer(config.BAN_MESSAGE, show_alert=True)
    else:
        await call.answer(config.BAN_MESSAGE, show_alert=True)

@router.callback_query(lambda c: c.data == 'menu_trustee')
async def menu_trustee(call: CallbackQuery):
    user = get_user(call.from_user.id)
    if user:
        await bot.delete_message(chat_id=call.message.chat.id, message_id=call.message.message_id)
        keyboard = [
            [InlineKeyboardButton(text='üí∂ –ó–∞—Ä–æ–±–∏—Ç–∏', callback_data='earn'), InlineKeyboardButton(text='üë§ –ü—Ä–æ—Ñ—ñ–ª—å', callback_data='profile')],
            [InlineKeyboardButton(text='‚öôÔ∏è –Ü–Ω—à–µ', callback_data='other'), InlineKeyboardButton(text='üí≥ –ö–∞—Ä—Ç–∞', callback_data='card')],
            [InlineKeyboardButton(text='üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞', callback_data='statistics'), InlineKeyboardButton(text='‚ùì FAQ', callback_data='faq')],
            [InlineKeyboardButton(text='üèÜ –¢–∞–±–ª–∏—Ü—è –õ—ñ–¥–µ—Ä—ñ–≤', callback_data='leaderboard')],
            [InlineKeyboardButton(text='üëë Trustee Plus', callback_data='trustee')]]
        
        markup = InlineKeyboardMarkup(inline_keyboard=keyboard)
        await bot.send_message(chat_id=call.message.chat.id, text='üè† –ì–æ–ª–æ–≤–Ω–µ –ú–µ–Ω—é:', reply_markup=markup)
    else:
        await call.message.answer(config.BAN_MESSAGE)


